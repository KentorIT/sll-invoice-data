<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2013 SLL <http://sll.se/> Licensed under the Apache License, 
	Version 2.0 (the "License"); you may not use this file except in compliance 
	with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">


	<beans profile="test">
		<context:property-placeholder location="classpath:/application.properties"
			ignore-unresolvable="true" />
	</beans>

	<beans profile="db-embedded">
		<context:property-placeholder location="classpath:/db-embedded.properties"
			ignore-unresolvable="true" />

		<bean id="org.h2.tools.Server-WebServer" class="org.h2.tools.Server"
			factory-method="createWebServer" init-method="start" destroy-method="shutdown">
			<constructor-arg value="-web,-webAllowOthers,-webPort,8082" />
		</bean>
	</beans>


	<beans profile="prod">
		<bean id="jpaProperties"
			class="org.springframework.beans.factory.config.MapFactoryBean">
			<property name="sourceMap">
				<map>
					<entry key="hibernate.dialect" value="${database.dialect}" />
					<entry key="hibernate.connection.pool_size" value="10" />
					<entry key="hibernate.cache.provider_class" value="org.hibernate.cache.NoCacheProvider" />
				</map>
			</property>
		</bean>
	</beans>

	<beans profile="test">
		<bean id="jpaProperties"
			class="org.springframework.beans.factory.config.MapFactoryBean">
			<property name="sourceMap">
				<map>
					<entry key="hibernate.dialect" value="${database.dialect}" />
					<entry key="hibernate.show_sql" value="${database.show-sql}" />
					<entry key="hibernate.format_sql" value="${database.format-sql}" />
					<entry key="hibernate.connection.pool_size" value="1" />
					<entry key="hibernate.cache.provider_class" value="org.hibernate.cache.NoCacheProvider" />
					<entry key="hibernate.hbm2ddl.auto" value="${database.updateStrategy}" />
				</map>
			</property>
		</bean>
	</beans>

	<beans>
		<context:annotation-config />
		<context:component-scan base-package="my.cool.app.mbean" />
		<context:component-scan
			base-package="se.sll.invoicedata.core.service.impl,se.sll.invoicedata.core.jmx,se.sll.invoicedata.app.jmx" />
		<jpa:repositories base-package="se.sll.invoicedata.core.model.repository" />
		<tx:annotation-driven />
		<tx:advice id="txAdvice" transaction-manager="transactionManager" />
	</beans>

	<beans>
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
			<property name="driverClassName" value="${database.driver}" />
			<property name="url" value="${database.url}" />
			<property name="username" value="${database.username}" />
			<property name="password" value="${database.password}" />
		</bean>

		<bean id="entityManagerFactory"
			class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="persistenceUnitName" value="invoice-data-pu" />
			<property name="jpaVendorAdapter">
				<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
					<property name="database" value="${database.vendor}" />
					<property name="showSql" value="${database.show-sql}" />
					<property name="generateDdl" value="true" />
				</bean>
			</property>
			<property name="jpaPropertyMap" ref="jpaProperties" />
		</bean>

		<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
			<property name="entityManagerFactory" ref="entityManagerFactory" />
		</bean>

		<bean id="messageSource"
			class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
			<property name="defaultEncoding" value="UTF-8" />
			<property name="basenames">
				<list>
					<value>classpath:error_messages</value>
				</list>
			</property>
		</bean>

		<!-- JMX stuff
		
		this bean must not be lazily initialized if the exporting is to happen -->
		<bean id="exporter" class="org.springframework.jmx.export.MBeanExporter"
			lazy-init="false">
			<property name="assembler" ref="assembler" />
			<property name="namingStrategy" ref="namingStrategy" />
			<property name="autodetect" value="true" />
		</bean>

		<bean id="jmxAttributeSource"
			class="org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource" />

		<!-- will create management interface using annotation metadata -->
		<bean id="assembler"
			class="org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler">
			<property name="attributeSource" ref="jmxAttributeSource" />
		</bean>

		<!-- will pick up the ObjectName from the annotation -->
		<bean id="namingStrategy"
			class="org.springframework.jmx.export.naming.MetadataNamingStrategy">
			<property name="attributeSource" ref="jmxAttributeSource" />
		</bean>
		
	</beans>

</beans>
